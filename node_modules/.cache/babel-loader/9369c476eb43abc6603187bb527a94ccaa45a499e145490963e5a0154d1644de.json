{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'https://d5e5-5-136-123-38.ngrok-free.app/';\nconst getHeaders = () => {\n  let header = {\n    'Content-Type': 'application/json; ',\n    // 'Content-Type': 'application/x-www-form-urlencoded',\n    'Accept': 'application/json, text/plain, /',\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n  };\n\n  // header.Authorization = Bearer ${USER_TOKEN};\n  return header;\n};\nexport const apiPost = async (url, params = {}) => {\n  const headers = getHeaders();\n  console.log('POST Url: ', `${baseUrl}${url}`, 'Тело запроса: ', params, 'headers: ', headers);\n  let data = await axios.post(`${baseUrl}${url}`, params, {\n    ...headers,\n    timeout: 60000\n  }).then(result => {\n    return result.data;\n  }).catch(err => {\n    throw err;\n  });\n  return data || false;\n};\nexport const apiGet = async (url, params = {}) => {\n  const headers = await getHeaders();\n  console.log('GET Url: ', `${baseUrl}${url}`, 'Тело запроса: ', params, 'headers: ', headers);\n  const data = await axios.get(`${baseUrl}${url}`, {\n    params,\n    headers,\n    timeout: 60000\n  }).then(result => {\n    return result.data;\n  }).catch(err => {\n    throw err;\n  });\n  return data || false;\n};\nexport const apiFetch = async (url, params = {}) => {\n  console.log('GET Url: ', `${baseUrl}${url}`, 'Тело запроса: ', params, 'headers: ', header);\n  const response = await fetch(`${baseUrl}${url}`, {\n    method: \"GET\",\n    // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\",\n    // no-cors, *cors, same-origin\n    cache: \"no-cache\",\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\",\n    // include, *same-origin, omit\n    headers: {\n      \"Content-Type\": \"application/json\"\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: \"follow\",\n    // manual, *follow, error\n    referrerPolicy: \"no-referrer\",\n    // no-referrer, *client\n    body: JSON.stringify(params) // body data type must match \"Content-Type\" header\n  });\n  return await response.json(); // parses JSON response into native JavaScript objects\n};","map":{"version":3,"names":["axios","baseUrl","getHeaders","header","apiPost","url","params","headers","console","log","data","post","timeout","then","result","catch","err","apiGet","get","apiFetch","response","fetch","method","mode","cache","credentials","redirect","referrerPolicy","body","JSON","stringify","json"],"sources":["D:/TPU/Тинькофф/parking/src/service/server.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'https://d5e5-5-136-123-38.ngrok-free.app/';\r\n\r\nconst getHeaders = () => {\r\n  let header = {\r\n    'Content-Type': 'application/json; ',\r\n    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    'Accept': 'application/json, text/plain, /',\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\r\n  };\r\n\r\n  // header.Authorization = Bearer ${USER_TOKEN};\r\n  return header;\r\n};\r\n\r\nexport const apiPost = async (url, params = {}) => {\r\n  const headers = getHeaders();\r\n  console.log(\r\n    'POST Url: ',\r\n    `${baseUrl}${url}`,\r\n    'Тело запроса: ',\r\n    params,\r\n    'headers: ',\r\n    headers,\r\n  );\r\n\r\n  let data = await axios\r\n    .post(`${baseUrl}${url}`, params, {\r\n      ...headers,\r\n      timeout: 60000,\r\n    })\r\n    .then(result => {\r\n      return result.data;\r\n    })\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n\r\n  return (data || false);\r\n};\r\n\r\nexport const apiGet = async (url, params = {}) => {\r\n  const headers = await getHeaders();\r\n  console.log(\r\n    'GET Url: ',\r\n    `${baseUrl}${url}`,\r\n    'Тело запроса: ',\r\n    params,\r\n    'headers: ',\r\n    headers,\r\n  );\r\n\r\n  const data = await axios\r\n    .get(`${baseUrl}${url}`, {\r\n      params,\r\n      headers,\r\n      timeout: 60000,\r\n    })\r\n    .then(result => {\r\n      return result.data;\r\n    })\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n\r\n  return(data || false);\r\n};\r\n\r\nexport const apiFetch = async (url, params = {}) => {\r\n  console.log(\r\n    'GET Url: ',\r\n    `${baseUrl}${url}`,\r\n    'Тело запроса: ',\r\n    params,\r\n    'headers: ',\r\n    header,\r\n  );\r\n\r\n  const response = await fetch(`${baseUrl}${url}`, {\r\n    method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n    mode: \"cors\", // no-cors, *cors, same-origin\r\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: \"same-origin\", // include, *same-origin, omit\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: \"follow\", // manual, *follow, error\r\n    referrerPolicy: \"no-referrer\", // no-referrer, *client\r\n    body: JSON.stringify(params), // body data type must match \"Content-Type\" header\r\n  });\r\n  return await response.json(); // parses JSON response into native JavaScript objects\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2CAA2C;AAE3D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,IAAIC,MAAM,GAAG;IACX,cAAc,EAAE,oBAAoB;IACpC;IACA,QAAQ,EAAE,iCAAiC;IAC3C,6BAA6B,EAAE,GAAG;IAClC,8BAA8B,EAAE;EAClC,CAAC;;EAED;EACA,OAAOA,MAAM;AACf,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;EACjD,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAC5BM,OAAO,CAACC,GAAG,CACT,YAAY,EACX,GAAER,OAAQ,GAAEI,GAAI,EAAC,EAClB,gBAAgB,EAChBC,MAAM,EACN,WAAW,EACXC,OACF,CAAC;EAED,IAAIG,IAAI,GAAG,MAAMV,KAAK,CACnBW,IAAI,CAAE,GAAEV,OAAQ,GAAEI,GAAI,EAAC,EAAEC,MAAM,EAAE;IAChC,GAAGC,OAAO;IACVK,OAAO,EAAE;EACX,CAAC,CAAC,CACDC,IAAI,CAACC,MAAM,IAAI;IACd,OAAOA,MAAM,CAACJ,IAAI;EACpB,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAI;IACZ,MAAMA,GAAG;EACX,CAAC,CAAC;EAEJ,OAAQN,IAAI,IAAI,KAAK;AACvB,CAAC;AAED,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAOZ,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;EAChD,MAAMC,OAAO,GAAG,MAAML,UAAU,CAAC,CAAC;EAClCM,OAAO,CAACC,GAAG,CACT,WAAW,EACV,GAAER,OAAQ,GAAEI,GAAI,EAAC,EAClB,gBAAgB,EAChBC,MAAM,EACN,WAAW,EACXC,OACF,CAAC;EAED,MAAMG,IAAI,GAAG,MAAMV,KAAK,CACrBkB,GAAG,CAAE,GAAEjB,OAAQ,GAAEI,GAAI,EAAC,EAAE;IACvBC,MAAM;IACNC,OAAO;IACPK,OAAO,EAAE;EACX,CAAC,CAAC,CACDC,IAAI,CAACC,MAAM,IAAI;IACd,OAAOA,MAAM,CAACJ,IAAI;EACpB,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAI;IACZ,MAAMA,GAAG;EACX,CAAC,CAAC;EAEJ,OAAON,IAAI,IAAI,KAAK;AACtB,CAAC;AAED,OAAO,MAAMS,QAAQ,GAAG,MAAAA,CAAOd,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;EAClDE,OAAO,CAACC,GAAG,CACT,WAAW,EACV,GAAER,OAAQ,GAAEI,GAAI,EAAC,EAClB,gBAAgB,EAChBC,MAAM,EACN,WAAW,EACXH,MACF,CAAC;EAED,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEpB,OAAQ,GAAEI,GAAI,EAAC,EAAE;IAC/CiB,MAAM,EAAE,KAAK;IAAE;IACfC,IAAI,EAAE,MAAM;IAAE;IACdC,KAAK,EAAE,UAAU;IAAE;IACnBC,WAAW,EAAE,aAAa;IAAE;IAC5BlB,OAAO,EAAE;MACP,cAAc,EAAE;MAChB;IACF,CAAC;IACDmB,QAAQ,EAAE,QAAQ;IAAE;IACpBC,cAAc,EAAE,aAAa;IAAE;IAC/BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxB,MAAM,CAAC,CAAE;EAChC,CAAC,CAAC;EACF,OAAO,MAAMc,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}