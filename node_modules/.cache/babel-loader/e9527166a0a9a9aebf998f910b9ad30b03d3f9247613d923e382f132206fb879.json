{"ast":null,"code":"var _jsxFileName = \"D:\\\\TPU\\\\\\u0422\\u0438\\u043D\\u044C\\u043A\\u043E\\u0444\\u0444\\\\parking\\\\Parking\\\\src\\\\containers\\\\CreaterList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ListUsers from \"./ListUsers\";\nimport { UserService } from \"../service/User.service\";\nimport { SpaceService } from \"../service/Space.service\";\nimport Button from \"./UI/Button\";\nimport stylesCreaterList from './CreaterList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreaterList = props => {\n  _s();\n  const [places, setPlace] = useState([]);\n  const fetchData = async () => {\n    //       // TODO Привести формат АПИ на фронте и бэке к одному виду\n    //       // TODO Вызывает бесконечную загрузку данных\n    const responceUsers = await UserService.getAll();\n    const responceSpaces = await SpaceService.getAll();\n    const placesList = createDataList(responceUsers, responceSpaces);\n    setPlace(placesList);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const createDataList = (listUsers, listSpaces) => {\n    const array = [];\n    for (let item of listSpaces) {\n      // TODO Определить Map статусов\n      if (item.status === 1) {\n        array.push(statusOne(item.id, listUsers));\n      } else if (item.status === 0) {\n        array.push(statusZero(item.id));\n      } else {\n        console.log(\"Ошибка\");\n      }\n    }\n    return array;\n  };\n  const statusOne = (id, users) => {\n    // TODO Сделать userMap, чтобы не делать цикл в цикле\n    for (let user of users) {\n      if (id === Number(user.parkingLot)) {\n        return {\n          'id': id,\n          'title': `${id} - ${user.secondName} ${user.firstName} - ${user.carNumber}`,\n          'color': 'red'\n        };\n      }\n    }\n  };\n  const statusZero = id => {\n    return {\n      'id': id,\n      'title': `${id} - Свободно`,\n      'color': 'green'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stylesCreaterList.list,\n    children: [places.map(place => /*#__PURE__*/_jsxDEV(ListUsers, {\n      place: place\n    }, place.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n};\n_s(CreaterList, \"zES6TN/awhMOTknvc9pwHcW3IA0=\");\n_c = CreaterList;\nexport default CreaterList;\nvar _c;\n$RefreshReg$(_c, \"CreaterList\");","map":{"version":3,"names":["useEffect","useState","ListUsers","UserService","SpaceService","Button","stylesCreaterList","jsxDEV","_jsxDEV","CreaterList","props","_s","places","setPlace","fetchData","responceUsers","getAll","responceSpaces","placesList","createDataList","listUsers","listSpaces","array","item","status","push","statusOne","id","statusZero","console","log","users","user","Number","parkingLot","secondName","firstName","carNumber","className","list","children","map","place","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["D:/TPU/Тинькофф/parking/Parking/src/containers/CreaterList.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ListUsers from \"./ListUsers\";\r\nimport { UserService } from \"../service/User.service\";\r\nimport { SpaceService } from \"../service/Space.service\";\r\nimport Button from \"./UI/Button\";\r\nimport stylesCreaterList from './CreaterList.module.css';\r\n\r\nconst CreaterList = (props) => {\r\n\r\n  const [places, setPlace] = useState([])\r\n\r\n  const fetchData = async () => {\r\n    //       // TODO Привести формат АПИ на фронте и бэке к одному виду\r\n    //       // TODO Вызывает бесконечную загрузку данных\r\n    const responceUsers = await UserService.getAll()\r\n    const responceSpaces = await SpaceService.getAll()\r\n\r\n\r\n    const placesList = createDataList(responceUsers, responceSpaces)\r\n    setPlace(placesList)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const createDataList = (listUsers, listSpaces) => {\r\n    const array = []\r\n    for (let item of listSpaces) {\r\n      // TODO Определить Map статусов\r\n      if (item.status === 1) {\r\n        array.push(statusOne(item.id, listUsers))\r\n      }\r\n      else if (item.status === 0) {\r\n        array.push(statusZero(item.id))\r\n      }\r\n      else { console.log(\"Ошибка\") }\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  const statusOne = (id, users) => {\r\n    // TODO Сделать userMap, чтобы не делать цикл в цикле\r\n    for (let user of users) {\r\n      if (id === Number(user.parkingLot)) {\r\n        return {\r\n          'id': id,\r\n          'title': `${id} - ${user.secondName} ${user.firstName} - ${user.carNumber}`,\r\n          'color': 'red'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const statusZero = (id) => {\r\n    return {\r\n      'id': id,\r\n      'title': `${id} - Свободно`,\r\n      'color': 'green'\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n      <div className={stylesCreaterList.list}>\r\n\r\n        {places.map(place => (\r\n          <ListUsers key={place.id} place={place} />\r\n        ))}\r\n\r\n        <Button text='Обновить' />\r\n      </div>\r\n      \r\n  )\r\n\r\n}\r\n\r\nexport default CreaterList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}