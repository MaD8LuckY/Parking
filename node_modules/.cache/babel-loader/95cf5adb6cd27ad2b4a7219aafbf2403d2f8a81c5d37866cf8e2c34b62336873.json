{"ast":null,"code":"var _jsxFileName = \"D:\\\\TPU\\\\\\u0422\\u0438\\u043D\\u044C\\u043A\\u043E\\u0444\\u0444\\\\parking\\\\src\\\\modules\\\\containers\\\\List.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass List extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.statusOne = (id, users) => {\n      for (let user of users) {\n        if (id === Number(user.parkingLot)) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"`$\", id, \" - $\", user.secondName, \" $\", user.firstName, \" - $\", user.carNumber, \"`\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }, this);\n        }\n      }\n    };\n    this.statusZero = id => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"`$\", id, \" - \\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u043E`\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this);\n    };\n    this.numbers = [1, 2, 3, 4, 5];\n  }\n  async load() {\n    const listFull = [];\n    const itemSpace = await this.fetchSpace();\n    const itemUser = await this.fetchUser();\n    for (let item of itemSpace) {\n      if (item.status === 1) {\n        listFull.push(this.statusOne(item.id, itemUser));\n      } else if (item.status === 0) {\n        listFull.push(this.statusZero(item.id));\n      } else {\n        console.log(\"Ошибка\");\n      }\n    }\n\n    // const createList = this.listFull.map((id) => <li>{id}</li>);\n    console.log(typeof listFull);\n  }\n  async fetchUser() {\n    const response = await fetch('/api/users');\n    const {\n      users\n    } = await response.json();\n    return users;\n  }\n  async fetchSpace() {\n    const response = await fetch('/api/spaces');\n    const {\n      data\n    } = await response.json();\n    return data;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.load()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default List;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","Component","constructor","args","statusOne","id","users","user","Number","parkingLot","children","secondName","firstName","carNumber","fileName","_jsxFileName","lineNumber","columnNumber","statusZero","numbers","load","listFull","itemSpace","fetchSpace","itemUser","fetchUser","item","status","push","console","log","response","fetch","json","data","render"],"sources":["D:/TPU/Тинькофф/parking/src/modules/containers/List.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nclass List extends React.Component { \r\n\r\n  async load() {\r\n    const listFull = [];\r\n    const itemSpace = await this.fetchSpace();\r\n    const itemUser = await this.fetchUser();\r\n    for(let item of itemSpace){\r\n      if(item.status === 1){\r\n        listFull.push(this.statusOne(item.id, itemUser))\r\n      } else if (item.status === 0){\r\n        listFull.push(this.statusZero(item.id))\r\n      } else {console.log(\"Ошибка\")}\r\n    }\r\n\r\n    // const createList = this.listFull.map((id) => <li>{id}</li>);\r\n  console.log(typeof listFull);\r\n  }\r\n\r\n  statusOne = (id, users) => {\r\n    for(let user of users) {\r\n      if(id === Number(user.parkingLot)){\r\n        return <li>`${id} - ${user.secondName} ${user.firstName} - ${user.carNumber}`</li>\r\n      }\r\n    }\r\n  }\r\n  statusZero = (id) => {\r\n    return <li>`${id} - Свободно`</li>\r\n  }\r\n\r\n  async fetchUser() {\r\n    const response = await fetch('/api/users');\r\n    const {users} = await response.json();\r\n    return users;\r\n  }\r\n\r\n  async fetchSpace() {\r\n    const response = await fetch('/api/spaces');\r\n    const {data} = await response.json();\r\n    return data;\r\n  }\r\n\r\n\r\n  numbers = [1,2,3,4,5]\r\n\r\n  render() {\r\n    return(\r\n      <ul>\r\n        {this.load()}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,SAASH,KAAK,CAACI,SAAS,CAAC;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAkBjCC,SAAS,GAAG,CAACC,EAAE,EAAEC,KAAK,KAAK;MACzB,KAAI,IAAIC,IAAI,IAAID,KAAK,EAAE;QACrB,IAAGD,EAAE,KAAKG,MAAM,CAACD,IAAI,CAACE,UAAU,CAAC,EAAC;UAChC,oBAAOV,OAAA;YAAAW,QAAA,GAAI,IAAE,EAACL,EAAE,EAAC,MAAI,EAACE,IAAI,CAACI,UAAU,EAAC,IAAE,EAACJ,IAAI,CAACK,SAAS,EAAC,MAAI,EAACL,IAAI,CAACM,SAAS,EAAC,GAAC;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QACpF;MACF;IACF,CAAC;IAAA,KACDC,UAAU,GAAIb,EAAE,IAAK;MACnB,oBAAON,OAAA;QAAAW,QAAA,GAAI,IAAE,EAACL,EAAE,EAAC,sDAAY;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IACpC,CAAC;IAAA,KAeDE,OAAO,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAAA;EAxCrB,MAAMC,IAAIA,CAAA,EAAG;IACX,MAAMC,QAAQ,GAAG,EAAE;IACnB,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;IACzC,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;IACvC,KAAI,IAAIC,IAAI,IAAIJ,SAAS,EAAC;MACxB,IAAGI,IAAI,CAACC,MAAM,KAAK,CAAC,EAAC;QACnBN,QAAQ,CAACO,IAAI,CAAC,IAAI,CAACxB,SAAS,CAACsB,IAAI,CAACrB,EAAE,EAAEmB,QAAQ,CAAC,CAAC;MAClD,CAAC,MAAM,IAAIE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAC;QAC3BN,QAAQ,CAACO,IAAI,CAAC,IAAI,CAACV,UAAU,CAACQ,IAAI,CAACrB,EAAE,CAAC,CAAC;MACzC,CAAC,MAAM;QAACwB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MAAA;IAC/B;;IAEA;IACFD,OAAO,CAACC,GAAG,CAAC,OAAOT,QAAQ,CAAC;EAC5B;EAaA,MAAMI,SAASA,CAAA,EAAG;IAChB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;IAC1C,MAAM;MAAC1B;IAAK,CAAC,GAAG,MAAMyB,QAAQ,CAACE,IAAI,CAAC,CAAC;IACrC,OAAO3B,KAAK;EACd;EAEA,MAAMiB,UAAUA,CAAA,EAAG;IACjB,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;IAC3C,MAAM;MAACE;IAAI,CAAC,GAAG,MAAMH,QAAQ,CAACE,IAAI,CAAC,CAAC;IACpC,OAAOC,IAAI;EACb;EAKAC,MAAMA,CAAA,EAAG;IACP,oBACEpC,OAAA;MAAAW,QAAA,EACG,IAAI,CAACU,IAAI,CAAC;IAAC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAET;AACF;AAEA,eAAejB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}