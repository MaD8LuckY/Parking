{"ast":null,"code":"var _jsxFileName = \"D:\\\\TPU\\\\\\u0422\\u0438\\u043D\\u044C\\u043A\\u043E\\u0444\\u0444\\\\parking\\\\src\\\\containers\\\\MainSection.jsx\",\n  _s = $RefreshSig$();\nimport Map from '../containers/Map';\nimport { useEffect, useState } from 'react';\nimport mapFloor1 from '../images/map1.svg';\nimport mapFloor2 from '../images/map2.svg';\nimport styleMainSection from './MainSection.module.css';\nimport { apiGet } from \"../service/server\";\nimport Button from './UI/Button';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setNeed } from \"../features/restarting/restartingSlice\";\nimport ListUsers from './ListUsers';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainSection = () => {\n  _s();\n  const [places, setPlace] = useState([]);\n  const [floors, setFloors] = useState([]);\n  const restarting = useSelector(state => state.restart.isNeed);\n  const dispatch = useDispatch();\n  const fetchData = async () => {\n    const responce = await fetch('public/f');\n    const data = await responce.json();\n    console.log(data);\n    // const responce = await apiGet('/api/get_lots/')\n    //   .then(res => {\n\n    //     const greenLots = res.active_lots.map(item => { // список свободных мест\n    //       return {\n    //         'id': item.id,\n    //         'title': `${item.id} - ${item.secondName} ${item.firstName} - ${item.carNumber} - ${item.startTime.split(' ')[1].substr(0, 5)}`,\n    //         'color': 'red',\n    //         'floor': item.floor\n    //       }\n    //     })\n    //     const redLots = res.inactive_lots.map(item => { // список занятых мест\n    //       return {\n    //         'id': item.id,\n    //         'title': `${item.id} - Cвободно`,\n    //         'color': 'green',\n    //         'floor': item.floor\n    //       }\n    //     })\n\n    //     const listOfLots = [...new Set([...greenLots, ...redLots])].sort(function (a, b) { // сортировка\n    //       return a.id - b.id;\n    //     });\n    //     setPlace(listOfLots);\n\n    //     setFloors([...new Set(listOfLots.map(item => {\n    //       return item.floor\n    //     }))])\n\n    //   })\n    //   .catch(err => console.log('lots err', err));\n  };\n  useEffect(() => {\n    // запуск при загрузке страницы\n    fetchData();\n  }, []);\n  if (restarting === true) {\n    // перезагрузка страницы\n    dispatch(setNeed(false));\n    fetchData();\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: styleMainSection.main,\n    children: [floors.map(floor => {\n      const lots = places.find({\n        'floor': floor\n      });\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styleMainSection.mapDiv,\n        children: [/*#__PURE__*/_jsxDEV(Map, {\n          floor: floor,\n          lots: lots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListUsers, {\n          places: lots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(MainSection, \"HJmj72zOJxtLyBNH/tcG6Fi6Aec=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = MainSection;\nexport default MainSection;\nvar _c;\n$RefreshReg$(_c, \"MainSection\");","map":{"version":3,"names":["Map","useEffect","useState","mapFloor1","mapFloor2","styleMainSection","apiGet","Button","useSelector","useDispatch","setNeed","ListUsers","axios","jsxDEV","_jsxDEV","MainSection","_s","places","setPlace","floors","setFloors","restarting","state","restart","isNeed","dispatch","fetchData","responce","fetch","data","json","console","log","className","main","children","map","floor","lots","find","mapDiv","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["D:/TPU/Тинькофф/parking/src/containers/MainSection.jsx"],"sourcesContent":["import Map from '../containers/Map';\r\nimport { useEffect, useState } from 'react';\r\nimport mapFloor1 from '../images/map1.svg'\r\nimport mapFloor2 from '../images/map2.svg'\r\nimport styleMainSection from './MainSection.module.css'\r\nimport { apiGet } from \"../service/server\";\r\nimport Button from './UI/Button';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setNeed } from \"../features/restarting/restartingSlice\";\r\nimport ListUsers from './ListUsers';\r\nimport axios from 'axios';\r\n\r\nconst MainSection = () => {\r\n\r\n  const [places, setPlace] = useState([])\r\n  const [floors, setFloors] = useState([])\r\n  const restarting = useSelector((state) => state.restart.isNeed)\r\n  const dispatch = useDispatch()\r\n\r\n  const fetchData = async () => {\r\n    const responce = await fetch('public/f')\r\n    const data = await responce.json()\r\n    console.log(data)\r\n    // const responce = await apiGet('/api/get_lots/')\r\n    //   .then(res => {\r\n\r\n    //     const greenLots = res.active_lots.map(item => { // список свободных мест\r\n    //       return {\r\n    //         'id': item.id,\r\n    //         'title': `${item.id} - ${item.secondName} ${item.firstName} - ${item.carNumber} - ${item.startTime.split(' ')[1].substr(0, 5)}`,\r\n    //         'color': 'red',\r\n    //         'floor': item.floor\r\n    //       }\r\n    //     })\r\n    //     const redLots = res.inactive_lots.map(item => { // список занятых мест\r\n    //       return {\r\n    //         'id': item.id,\r\n    //         'title': `${item.id} - Cвободно`,\r\n    //         'color': 'green',\r\n    //         'floor': item.floor\r\n    //       }\r\n    //     })\r\n\r\n    //     const listOfLots = [...new Set([...greenLots, ...redLots])].sort(function (a, b) { // сортировка\r\n    //       return a.id - b.id;\r\n    //     });\r\n    //     setPlace(listOfLots);\r\n\r\n    //     setFloors([...new Set(listOfLots.map(item => {\r\n    //       return item.floor\r\n    //     }))])\r\n\r\n    //   })\r\n    //   .catch(err => console.log('lots err', err));\r\n  }\r\n\r\n\r\n  useEffect(() => { // запуск при загрузке страницы\r\n    fetchData()\r\n  }, [])\r\n\r\n  if (restarting === true) { // перезагрузка страницы\r\n    dispatch(setNeed(false))\r\n    fetchData()\r\n  }\r\n\r\n  return (\r\n    <main className={styleMainSection.main}>\r\n      {\r\n        floors.map(floor => {\r\n\r\n          const lots = places.find({'floor': floor});\r\n\r\n          <div className={styleMainSection.mapDiv}>\r\n            <Map floor={floor} lots={lots}/>\r\n            <ListUsers places={lots} />\r\n          </div>\r\n        })\r\n      }\r\n      <Button text=\"Обновить\" />\r\n    </main>\r\n  )\r\n\r\n}\r\n\r\nexport default MainSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}