{"ast":null,"code":"import React from \"react\";\nimport ListUsers from \"./ListUsers\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CreaterList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.statusOne = (id, users) => {\n      for (let user of users) {\n        if (id === Number(user.parkingLot)) {\n          return {\n            'id': id,\n            'title': `${id} - ${user.secondName} ${user.firstName} - ${user.carNumber}`,\n            'color': 'red'\n          };\n        }\n      }\n    };\n    this.statusZero = id => {\n      return {\n        'id': id,\n        'title': `${id} - Свободно`,\n        'color': 'green'\n      };\n    };\n    this.load();\n  }\n\n  // state = {\n  //   dataList: {}\n  // }\n\n  async load() {\n    const listik = [];\n    const itemSpace = await this.fetchSpace();\n    const itemUser = await this.fetchUser();\n    console.log(itemSpace, itemUser);\n    for (let item of itemSpace) {\n      if (item.status === 1) {\n        listik.push(this.statusOne(item.id, itemUser));\n      } else if (item.status === 0) {\n        listik.push(this.statusZero(item.id));\n      } else {\n        console.log(\"Ошибка\");\n      }\n    }\n\n    // this.setState({\n    //   dataList: listik\n    // })\n  }\n\n  // getTitle = (record) => record.title\n  // getID = (record) => record.id\n  // getColor = (record) => record.color\n\n  async fetchUser() {\n    const response = await fetch('/api/users');\n    const {\n      users\n    } = await response.json();\n    return users;\n  }\n  async fetchSpace() {\n    const response = await fetch('/api/spaces');\n    const {\n      data\n    } = await response.json();\n    return data;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    // <ListUsers />\n    ;\n  }\n}\nexport default CreaterList;","map":{"version":3,"names":["React","ListUsers","Fragment","_Fragment","jsxDEV","_jsxDEV","CreaterList","Component","constructor","props","statusOne","id","users","user","Number","parkingLot","secondName","firstName","carNumber","statusZero","load","listik","itemSpace","fetchSpace","itemUser","fetchUser","console","log","item","status","push","response","fetch","json","data","render"],"sources":["D:/TPU/Тинькофф/parking/src/modules/containers/CreaterList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport ListUsers from \"./ListUsers\";\r\n\r\nclass CreaterList extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.load()\r\n  }\r\n\r\n  // state = {\r\n  //   dataList: {}\r\n  // }\r\n\r\n\r\n  async load() {\r\n    const listik = [];\r\n    const itemSpace = await this.fetchSpace();\r\n    const itemUser = await this.fetchUser();\r\n    console.log(itemSpace, itemUser)\r\n    for (let item of itemSpace) {\r\n      if (item.status === 1) {\r\n        listik.push(this.statusOne(item.id, itemUser))\r\n      } else if (item.status === 0) {\r\n        listik.push(this.statusZero(item.id))\r\n      } else { console.log(\"Ошибка\") }\r\n    }\r\n\r\n    // this.setState({\r\n    //   dataList: listik\r\n    // })\r\n  }\r\n\r\n  // getTitle = (record) => record.title\r\n  // getID = (record) => record.id\r\n  // getColor = (record) => record.color\r\n\r\n  async fetchUser() {\r\n    const response = await fetch('/api/users');\r\n    const { users } = await response.json();\r\n    return users;\r\n  }\r\n\r\n  async fetchSpace() {\r\n    const response = await fetch('/api/spaces');\r\n    const { data } = await response.json();\r\n    return data;\r\n  }\r\n\r\n  statusOne = (id, users) => {\r\n    for (let user of users) {\r\n      if (id === Number(user.parkingLot)) {\r\n        return {'id': id ,\r\n        'title': `${id} - ${user.secondName} ${user.firstName} - ${user.carNumber}`,\r\n        'color': 'red'}\r\n      }\r\n    }\r\n  }\r\n  statusZero = (id) => {\r\n    return {'id': id, \r\n    'title': `${id} - Свободно`,\r\n    'color': 'green'}\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <></>\r\n      // <ListUsers />\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default CreaterList;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,SAASN,KAAK,CAACO,SAAS,CAAC;EACxCC,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IAAA,KA2CdC,SAAS,GAAG,CAACC,EAAE,EAAEC,KAAK,KAAK;MACzB,KAAK,IAAIC,IAAI,IAAID,KAAK,EAAE;QACtB,IAAID,EAAE,KAAKG,MAAM,CAACD,IAAI,CAACE,UAAU,CAAC,EAAE;UAClC,OAAO;YAAC,IAAI,EAAEJ,EAAE;YAChB,OAAO,EAAG,GAAEA,EAAG,MAAKE,IAAI,CAACG,UAAW,IAAGH,IAAI,CAACI,SAAU,MAAKJ,IAAI,CAACK,SAAU,EAAC;YAC3E,OAAO,EAAE;UAAK,CAAC;QACjB;MACF;IACF,CAAC;IAAA,KACDC,UAAU,GAAIR,EAAE,IAAK;MACnB,OAAO;QAAC,IAAI,EAAEA,EAAE;QAChB,OAAO,EAAG,GAAEA,EAAG,aAAY;QAC3B,OAAO,EAAE;MAAO,CAAC;IACnB,CAAC;IAvDC,IAAI,CAACS,IAAI,CAAC,CAAC;EACb;;EAEA;EACA;EACA;;EAGA,MAAMA,IAAIA,CAAA,EAAG;IACX,MAAMC,MAAM,GAAG,EAAE;IACjB,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;IACzC,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;IACvCC,OAAO,CAACC,GAAG,CAACL,SAAS,EAAEE,QAAQ,CAAC;IAChC,KAAK,IAAII,IAAI,IAAIN,SAAS,EAAE;MAC1B,IAAIM,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QACrBR,MAAM,CAACS,IAAI,CAAC,IAAI,CAACpB,SAAS,CAACkB,IAAI,CAACjB,EAAE,EAAEa,QAAQ,CAAC,CAAC;MAChD,CAAC,MAAM,IAAII,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QAC5BR,MAAM,CAACS,IAAI,CAAC,IAAI,CAACX,UAAU,CAACS,IAAI,CAACjB,EAAE,CAAC,CAAC;MACvC,CAAC,MAAM;QAAEe,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MAAC;IACjC;;IAEA;IACA;IACA;EACF;;EAEA;EACA;EACA;;EAEA,MAAMF,SAASA,CAAA,EAAG;IAChB,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;IAC1C,MAAM;MAAEpB;IAAM,CAAC,GAAG,MAAMmB,QAAQ,CAACE,IAAI,CAAC,CAAC;IACvC,OAAOrB,KAAK;EACd;EAEA,MAAMW,UAAUA,CAAA,EAAG;IACjB,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;IAC3C,MAAM;MAAEE;IAAK,CAAC,GAAG,MAAMH,QAAQ,CAACE,IAAI,CAAC,CAAC;IACtC,OAAOC,IAAI;EACb;EAmBAC,MAAMA,CAAA,EAAG;IACP,oBACE9B,OAAA,CAAAF,SAAA,mBAAI;IACJ;IAAA;EAEJ;AAEF;AAEA,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}