{"ast":null,"code":"var _jsxFileName = \"D:\\\\TPU\\\\\\u0422\\u0438\\u043D\\u044C\\u043A\\u043E\\u0444\\u0444\\\\parking\\\\src\\\\containers\\\\Forms\\\\FormStart.jsx\",\n  _s = $RefreshSig$();\nimport Input from \"../UI/Input\";\nimport Button from \"../UI/Button\";\nimport { AdminService } from \"../../service/Admin.service\";\nimport { useSelector } from \"react-redux\";\nimport styleForm from './FormStart.module.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormStart = () => {\n  _s();\n  const navigate = useNavigate();\n  const displayLogin = useSelector(state => state.auth.login);\n  const displayPass = useSelector(state => state.auth.password);\n  const entrance = e => {\n    e.preventDefault();\n    // const fetchData = async () => {\n    //   const responceAdmin = await AdminService.getAll()\n\n    //   if(responceAdmin === 1){\n    //     navigate('main', {replace: 'true'})\n    //   } else if (responceAdmin === 0) {\n    //     alert('Неверно введены данные')\n    //   }\n\n    // }\n\n    const authorization = async (login, paasword) => {\n      await apiPost('/admin_auth', {\n        firstName: user.firstName,\n        secondName: user.secondName,\n        carNumber: user.carNumber,\n        parkingLot: id\n      }).then(res => {\n        var _res$message;\n        console.log('createBooking', res);\n        if (res !== null && res !== void 0 && (_res$message = res.message) !== null && _res$message !== void 0 && _res$message.includes('Can')) {\n          toastFunc(res.message);\n        } else {\n          dispatch(setStatus(id));\n          dispatch(setOccupiedLot(id));\n          getLots();\n          toastFunc(res.message);\n        }\n      }).catch(err => console.log('createBooking err', err));\n    };\n\n    // fetchData()\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: entrance,\n    className: styleForm.form,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n      type: \"text\",\n      id: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      id: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(FormStart, \"bMpWH69wB2BwY66kOXWsh/MvlR0=\", false, function () {\n  return [useNavigate, useSelector, useSelector];\n});\n_c = FormStart;\nexport default FormStart;\nvar _c;\n$RefreshReg$(_c, \"FormStart\");","map":{"version":3,"names":["Input","Button","AdminService","useSelector","styleForm","useNavigate","jsxDEV","_jsxDEV","FormStart","_s","navigate","displayLogin","state","auth","login","displayPass","password","entrance","e","preventDefault","authorization","paasword","apiPost","firstName","user","secondName","carNumber","parkingLot","id","then","res","_res$message","console","log","message","includes","toastFunc","dispatch","setStatus","setOccupiedLot","getLots","catch","err","onSubmit","className","form","children","name","type","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["D:/TPU/Тинькофф/parking/src/containers/Forms/FormStart.jsx"],"sourcesContent":["import Input from \"../UI/Input\";\r\nimport Button from \"../UI/Button\";\r\nimport { AdminService } from \"../../service/Admin.service\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styleForm from './FormStart.module.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FormStart = () => {\r\n\r\n  const navigate = useNavigate()\r\n  const displayLogin = useSelector((state) => state.auth.login)\r\n  const displayPass = useSelector((state) => state.auth.password)\r\n\r\n  const entrance = (e) => {\r\n    e.preventDefault()\r\n    // const fetchData = async () => {\r\n    //   const responceAdmin = await AdminService.getAll()\r\n\r\n    //   if(responceAdmin === 1){\r\n    //     navigate('main', {replace: 'true'})\r\n    //   } else if (responceAdmin === 0) {\r\n    //     alert('Неверно введены данные')\r\n    //   }\r\n      \r\n    // }\r\n\r\n    const authorization = async (login, paasword) => {\r\n      await apiPost('/admin_auth', {\r\n        firstName: user.firstName,\r\n        secondName: user.secondName,\r\n        carNumber: user.carNumber,\r\n        parkingLot: id,\r\n      })\r\n        .then(res => {\r\n          console.log('createBooking', res);\r\n          if (res?.message?.includes('Can')) {\r\n            toastFunc(res.message);\r\n          } else {\r\n            dispatch(setStatus(id));\r\n            dispatch(setOccupiedLot(id));\r\n            getLots();\r\n            toastFunc(res.message);\r\n          }\r\n        })\r\n        .catch(err => console.log('createBooking err', err));\r\n    };\r\n\r\n    // fetchData()\r\n   }\r\n\r\n  return (\r\n    <form onSubmit={entrance} className={styleForm.form}>\r\n      <Input name=\"Логин\" type=\"text\" id='login'/>\r\n      <Input name=\"Пароль\" type=\"password\" id='password'/>\r\n      <Button text=\"Войти\"/>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FormStart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}